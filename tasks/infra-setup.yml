---
# Setup OKD4 Helper Node

- hosts: infra
  vars_files:
    - ../vars/okd.yml
  handlers:
  - import_tasks: ../handlers/main.yml
  tasks:
  - name: Install needed packages
    yum:
      name:
        - haproxy
        - httpd
        - vim
        - bash-completion
        - python3-libsemanage
        - syslinux
        - tftp-server
      state: present
  - name: Write out haproxy config file
    template:
      src: ../templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
    notify:
      - restart haproxy
    tags: current
  - name: Copy httpd conf file
    template:
      src: ../templates/httpd.conf.j2
      dest: /etc/httpd/conf/httpd.conf
    notify:
      - restart httpd
  - name: Create apache directories for installing
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
      - /var/www/html/install
      - /var/www/html/ignition
  - name: Delete OKD4 files, if requested, to download again
    file:
       state: absent
       path: "{{ item }}"
    with_items:
      - "/usr/local/src/openshift-client-linux.tar.gz"
      - "/usr/local/src/openshift-install-linux.tar.gz"
#      - "/var/www/html/install/bios.raw.gz"
      - "/var/lib/tftpboot/coreos/{{ okd.rootfs_file }}"
      - "/var/lib/tftpboot/coreos/{{ okd.kernel_file }}"
      - "/var/lib/tftpboot/coreos/{{ okd.initramfs_file }}"
    when: force_okd_download

#  - name: Downloading OKD4 installer Bios
#    get_url:
#      url: "{{ ocp_bios}}"
#      dest: /var/www/html/install/bios.raw.gz
#      mode: 0555

  - name: Open up firewall ports
    firewalld:
      permanent: yes
      immediate: yes
      state: enabled
      port: "{{ item }}"
    with_items:
      - 67/udp
      - 53/tcp
      - 53/udp
      - 443/tcp
      - 80/tcp
      - 8080/tcp
      - 8180/tcp
      - 6443/tcp
      - 6443/udp
      - 22623/tcp
      - 22623/udp
      - 9000/tcp
      - 69/udp
      - 111/tcp
      - 2049/tcp
      - 20048/tcp
      - 50825/tcp
      - 53248/tcp

  - name: Best effort SELinux repair - Apache
    shell: "restorecon -vR /var/www/html || true"

  - name: Create TFTP config dir
    file:
      path: /var/lib/tftpboot/pxelinux.cfg
      state: directory
      mode: 0755
    notify:
      - restart tftp

  - name: Create TFTP coreos dir
    file:
      path: /var/lib/tftpboot/coreos
      state: directory
      mode: 0755

  - name: SEBool allow haproxy connect any port
    seboolean:
      name: haproxy_connect_any
      state: yes
      persistent: yes
    notify:
      - restart haproxy

  - name: Copy over files needed for TFTP
    shell: "cp -a /usr/share/syslinux/* /var/lib/tftpboot"

  - name: Downloading OKD4 installer rootfs
    get_url:
      url: "{{ okd.rootfs_url }}"
      dest: "/var/lib/tftpboot/coreos/{{ okd.rootfs_file }}"
      mode: 0555

  - name: Downloading OKD4 installer initramfs
    get_url:
      url: "{{ okd.initramfs_url }}"
      dest: "/var/lib/tftpboot/coreos/{{ okd.initramfs_file }}"
      mode: 0555

  - name: Downloading OKD4 installer kernel
    get_url:
      url: "{{ okd.kernel_url }}"
      dest: "/var/lib/tftpboot/coreos/{{ okd.kernel_file }}"
      mode: 0555

  - name: Generate pxe config files
    block:
    - name: Set the node specific tftp files
      template:
        src: ../templates/pxe.j2
        dest: "/var/lib/tftpboot/pxelinux.cfg/01-{{ item.macaddr | regex_replace (':', '-')}}"
        mode: 0555
      with_items: "{{ nodes }}"
      notify:
        - restart tftp
  - name: Installing TFTP Systemd helper
    copy:
      src: ../files/start-tftp.sh
      dest: /usr/local/bin/start-tftp.sh
      mode: '0555'

  - name: Installing TFTP Systemd unit file
    copy:
      src: ../files/helper-tftp.service
      dest: /etc/systemd/system/helper-tftp.service
      mode: '0655'

  - name: Systemd daemon reload
    systemd:
      daemon_reload: yes

  - name: Starting services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - haproxy
      - httpd
      - tftp
      - helper-tftp

  - name: Unmasking Services
    systemd:
      name: "{{ item }}"
      enabled: yes
      masked: no
    with_items:
      - tftp

  - name: Downloading OKD4 client
    get_url:
      url: "{{ okd.client }}"
      dest: /usr/local/src/openshift-client-linux.tar.gz

  - name: Downloading OKD4 Installer
    get_url:
      url: "{{ okd.installer }}"
      dest: /usr/local/src/openshift-install-linux.tar.gz

  - name: Unarchiving OKD4 client
    unarchive:
      src: /usr/local/src/openshift-client-linux.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Unarchiving OKD4 Installer
    unarchive:
      src: /usr/local/src/openshift-install-linux.tar.gz
      dest: /usr/local/bin
      remote_src: yes

  - name: Removing files that are not needed
    file:
      path: /usr/local/bin/README.md
      state: absent

  - name: Restarting NetworkManager
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - NetworkManager
